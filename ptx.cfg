#!/usr/bin/env perl
#-----------------------------------------------------------------------------#
# ptx pipeline
ptx => {
    jellyfish_bin => "",  # assume exported
    bowtie2_bin => "",    # assume exported
    bowtie2_path => "",   # assume exported
    velvet_bin => "",     # assume exported
    blast_binary => 'blastn', # assume exported
    blast_path => "",     # assume exported
    phrap_path => 'phrap',
    continue => "",       # ""=TRUE, undef=FALSE
    threads => 8,
    tasks => [
	{ # Scale reads data set to 200X
	    id => 'scr', 
	    parser => parse_csv,
	    cmd => [qw( 
		%bin%scale_reads.pl
		-1 %opt{reads}%
		-2 %opt{mates}% 
		--ref_cluster %bin%/../data/cds.nr98.fa
		--threads %opt{threads}% 
		--out %%
		--threads %opt{threads}%
		-c %opt{core_config}% %opt{config}%
		)],
	},
	{ # run jellyfish
	    id => 'jf1', 
	    cmd => [qw(
		%opt{jellyfish_bin}%jellyfish count 
		-t %opt{threads}% 
		-m 31 
		-s 500M -C 
		-o %[-1]%.jf 
		%[-1]%_[12].fq
		)]
	},
	{ # filter kmer based
	    id => 'kfr',
	    cmd => [qw(
		%bin%kmer_filter_reads.pl 
		-1 %[-2]%_1.fq -2 %[-2]%_2.fq 
		--kmer-hash %[-2]%.jf_0
    		--kmer-size 31 
		--out %%
		-c %opt{core_config}% %opt{config}%
		)]
	},
	{ # run jellyfish again
	    id => 'jf2',
	    cmd => [qw(
		%opt{jellyfish_bin}%jellyfish count 
		-t %opt{threads}% 
		-m 31 
		-s 500M -C 
		-o %[-1]%.jf 
		%[-1]%_[12].fq
		)]
	},
	{ # filter kmer based again
	    id => 'kfr2',
	    cmd => [qw(
		%bin%kmer_filter_reads.pl 
		-1 %[-2]%_1.fq -2 %[-2]%_2.fq 
		--kmer-hash %[-2]%.jf_0
    		--kmer-size 31 
		--out %%
		-c %opt{core_config}% %opt{config}%
		)]
	},
	{ # map reads to reference
	    id => 'rrm',
	    cmd => [qw(%bin%ref_reads_map.pl 
		-1 %{kfr2}%_1.fq 
		-2 %{kfr2}%_2.fq 
		-o rrm 
		-r %bin%../data/ref/%res{scr}{closest_ref}%.fa 
		--bowtie2-path "%opt{bowtie2_path}%"
		--threads %opt{threads}% 
		-c %opt{core_config}% %opt{config}%
		--debug
		)]
	},
	{ # assemble reads
	    id => 'asr',
	    cmd => [qw(
		%bin%assemble_reads.pl
		--reads %{kfr}%_1.fq
		--mates %{kfr}%_2.fq
		--out %%.fa
		--velvet_path %opt{velvet_bin}%
		--isize %res{scr}{insert_size}%
		-c %opt{core_config}% %opt{config}%
		)],
	},
	{ # superassemble contigs
	    id => 'asc',
	    cmd => [qw(
		%bin%assemble_contigs.pl
		--in %[-1]%.fa
		--out %%.fa
		-c %opt{core_config}% %opt{config}%
		)]
	},
	{ # extend contigs
	    id => 'exc',
	    cmd => [qw(
		%bin%extend_contigs.pl
		--reads %{scr}%_1.fq
		--mates %{scr}%_2.fq
		--in %[-1]%.fa
		--out %%.fa
		-c %opt{core_config}% %opt{config}%
		)],
	},
 	{ # superassemble contigs and extensions
	    id => 'asc2',
	    cmd => [qw(
		%bin%assemble_contigs.pl
		--in %[-1]%.fa
		--in %[-2]%.fa
		--out %%.fa
		-c %opt{core_config}% %opt{config}%
		)]
	},
	{ # decontaminate
	    id => 'fic',
	    cmd => [qw(
		%bin%filter_contigs.pl
		--in %[-1]%.fa
		--blast_db %bin%/../data/cds.nr98.fa
		-c %opt{core_config}% %opt{config}%
		)],
	},
	{ # process inverted repeat
	    id => 'mir',
	    cmd => [qw(
		%bin%make_inverted_repeat.pl
		--in %[-2]%.fil.fa
		--out %%.fa
		)],
	}
	],

},

#------------------------------------------------------------------------------#
# scale_reads.pl
scr => {
    target_coverage => 200,
    min_single_coverage => 20,
    min_covered_CDS => 25,
    coverage_check_interval => 10000,

    # bowtie2 options
    bowtie2_params => [qw(
	--no-unal
	--n-ceil C,0,0
	--very-sensitive-local
    )],
}, 

# kmer_filter
kfr => {
    cutoff => "100%",
    lower => 40,
    upper => 1000,
    "penalize-N" => 1,
    "kmer-shift" =>  1,
    "perl-hash" => 1, 
},

# reads_ref_map
rrm => {
    # bowtie2 options
    bowtie2_params => [qw(
	--no-unal
	--n-ceil C,0,0
	--very-sensitive
    )],
}, 


# assemble_reads.pl
asr => {
    outkmer => [qw(33 39 45 51 57 63 69 75 81 87 93)],
    workingdir => "./",
    velveth_parameter => '33,99,6',
    velvetg_parameter => '',
    velvet_out => "velvet_out",
}, 

fic => {
    blast_db => undef,
    blast_options => [qw(-max_target_seqs 1 -evalue 1e-10 -outfmt), "'6 qseqid'"],
    seqfilter_options => [qw(--min-length 500)],
}, 

asc => {
    workingdir => './',
    overwrite => 0,
}, 

# extend_contigs.pl
exc => {
    min_seq_length => 1000,
    bowtie2_log => './bowtie2.log',
}, 

mir => {
}, 
