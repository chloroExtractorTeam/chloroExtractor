#!/usr/bin/env perl
#-----------------------------------------------------------------------------#
# ptx pipeline
ptx => {
    jellyfish_bin => "", # assume exported
    bowtie2_bin => "", # assume exported
    continue => "", # ""=TRUE, undef=FALSE
    threads => 8,
    tasks => [
	{ 
	    id => 'scr', 
	    parser => parse_csv,
	    cmd => [qw( 
		%bin%scale_reads.pl
		-1 %opt{reads}%
		-2 %opt{mates}% 
		-c %opt{core_config}% %opt{config}%
		--ref_cluster %bin%/../data/cds.nr98.fa
		--out %%
		--threads %opt{threads}%
		--debug
		)],
	},
	{
	    id => 'jf1', 
	    cmd => [qw(%opt{jellyfish_bin}%jellyfish count -t %opt{threads}% -m 31 -s 500M -C -o %[-1]%.jf %[-1]%_[12].fq)]
	},
	{
	    id => 'kfr',
	    cmd => [qw(
		%bin%kmer_filter_reads.pl 
		-1 %[-2]%_1.fq -2 %[-2]%_2.fq 
		--kmer-hash %[-2]%.jf_0
    		--kmer-size 31 
		--out %%
		--debug)]
	},
	{ 
	    id => 'jf2',
	    cmd => [qw(%opt{jellyfish_bin}%jellyfish count -t %opt{threads}% -m 31 -s 500M -C -o %[-1]%.jf %[-1]%_[12].fq)]
	},
	{
	    id => 'rrm',
	    cmd => [qw(%bin%ref_read_map.pl -1 %{kfr}%_1.fq -2 %{kfr}%_2.fq -o rrm -r %bin%../data/ref/%res{scr}{closest_ref}%.fa --bowtie2 %opt{bowtie2_bin}%)]
	}
	],

},

#------------------------------------------------------------------------------#
# scale_reads.pl
scr => {
    target_coverage => 200,
    min_single_coverage => 20,
    min_covered_CDS => 25,
    coverage_check_interval => 10000,

    # bowtie2 options
    bowtie2_params => [qw(
	--no-unal
	--n-ceil C,0,0
	--very-fast
    )],
}, 

kfr => {
    cutoff => "100%",
    lower => 40,
    upper => 1000,
    "penalize-N" => 1,
    "kmer-shift" =>  1,
    "perl-hash" => 1, 
}
